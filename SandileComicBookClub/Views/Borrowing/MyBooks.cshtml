@model IEnumerable<SandileComicBookClub.Models.BorrowedBookVM>

@if (Request.IsAuthenticated)
{

    <br />
    <h2>My Current Reads</h2>
    <br />

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.BookTitle.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BorrowDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Time)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReturnDate)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.BookTitle.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BorrowDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Time)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReturnDate)
        </td>
        <td>
            @if (item.Status == "Borrowed")
            {
                using (Html.BeginForm("Return", "Borrow", new { id = item.BorrowingID }, FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-primary">Return</button>
                }
            }
        </td>
    </tr>
        }

    </table>
}