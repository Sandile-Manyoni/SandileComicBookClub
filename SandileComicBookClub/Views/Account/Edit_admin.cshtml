@model SandileComicBookClub.Models.Member

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Member Details</h2>


@using (Html.BeginForm("Edit_admin", "Account"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        @Html.HiddenFor(model => model.MemberID)

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, "Hashed Password", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } }) <input type="button" id="changePW" value="Change Password" class="btn btn-xs btn-block btn-info padding" />
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
        </div>

        @* CHANGE PASSWORD FORM *@

        @Html.Hidden("PWchange", "0", new { ID = "changed" })
        <div id="PWmenu" class="jumbotron form-group">
            @* ENTER NEW PASSWORD *@
            <div class="form-group">
                @Html.Label("NewPWLabel", "New Password", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Editor("NewPassword", new { htmlAttributes = new { @class = "form-control", type = "password" } })
                </div>
            </div>

            @* CONFIRM NEW PASSWORD *@
            <div class="form-group">
                @Html.Label("ConfNewPWLabel", "Confirm New Password", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Editor("ConfirmPassword", new { htmlAttributes = new { @class = "form-control", type = "password" } })
                </div>
            </div>

            @* CANCEL THE CHANGE *@
            <a id="cancelChangePW" class="btn btn-sm btn-info col-md-offset-2 padding">Cancel Password Change</a>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CellPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CellPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CellPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Administrator, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    <span class="padding">@Html.EditorFor(model => model.Administrator)</span>
                    @Html.ValidationMessageFor(model => model.Administrator, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save Changes" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div class="padding">
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
}
